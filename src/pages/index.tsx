import { Session } from "@supabase/supabase-js";
import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import Account from "../components/Account";
import Auth from "../components/Auth";
import { supabase } from "../utils/supabaseClient";

const Home: NextPage = () => {
  const [isLoading, setIsLoading] = useState(true);
  const [session, setSession] = useState<Session | null>(null);

  useEffect(() => {
    let mounted = true;

    async function getInitialSession() {
      const {
        data: { session },
      } = await supabase.auth.getSession();

      // only update the react state if the component is still mounted
      if (mounted) {
        if (session) {
          setSession(session);
        }

        setIsLoading(false);
      }
    }

    getInitialSession();

    const {
      data: { subscription },
    } = supabase.auth.onAuthStateChange((_event, session) => {
      setSession(session);
    });

    return () => {
      mounted = false;

      subscription?.unsubscribe();
    };
  }, []);

  return (
    <div>
      <Head>
        <title>Taqueria 505</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="w-screen h-screen flex justify-center items-center">
        <h1>Taqueria 505</h1>

        {isLoading ? (
          <p>Loading...</p>
        ) : (
          <>
            {!session ? (
              <Auth />
            ) : (
              <Account key={session.user.id} session={session} />
            )}
          </>
        )}
      </main>
    </div>
  );
};

export default Home;
